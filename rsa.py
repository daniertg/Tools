from decimal import *
from tqdm import tqdm

N = Decimal(69220692452978837611584722489251562815563515968622649364574493397916874768751289888344631125027319952704576216989131429458589464882379411517016057847623832411538674466755326359437493887128746872377862465859891147261687428835985929008088250827938687801987323150396529439827662432314519477115478857456699371283)
e = Decimal(5888509129483318733141015540684847561532089231660075201362475202052296359580843241369355360704011646822761311787991096851475973157231557254766780057572768428628821260266097843818073736166414522085005139114354488263451168354466764469559633351657393916921023726636704060354584481520736047319632736089081616483)
c = Decimal(65733928466500769463675386952578429587241210775171226409262036946242160531524121603702893292951189436939807069576292554964867260712083342563197075560143585692779810092725435653941667836925416444042271853314655613726291165046934468052443555036125158738361053494262690595813597201022626206661383934415988054017)


def int_to_ascii(m):
    # Decode to ascii (from https://crypto.stackexchange.com/a/80346)
    m_hex = hex(int(m))[2:-1]  # Number to hex
    m_ascii = "".join(
        chr(int(m_hex[i : i + 2], 16)) for i in range(0, len(m_hex), 2)
    )  # Hex to Ascii
    return m_ascii


# Find padding
getcontext().prec = 280  # Increase precision
padding = 0
for k in tqdm(range(0, 10_000)):
    m = pow(k * N + c, 1 / e)

    m_ascii = int_to_ascii(m)

    if "pico" in m_ascii:
        padding = k
        break

print("Padding: %s" % padding)

# Increase precision further to get entire flag
getcontext().prec = 700

m = pow(padding * N + c, 1 / e)
m_ascii = int_to_ascii(m)
print("Flag: %s" % m_ascii.strip())